viniciusbozzi@vinicius-PC:~/Documentos/ufes/6 periodo/linguagem de programacao/Missao 2$ swipl lp-dart.pl 
Welcome to SWI-Prolog (threaded, 64 bits, version 8.2.3)
SWI-Prolog comes with ABSOLUTELY NO WARRANTY. This is free software.
Please run ?- license. for legal details.

For online help and background, visit https://www.swi-prolog.org
For built-in help, use ?- help(Topic). or ?- apropos(Word).

?- descendente(dart, LP).
LP = cSharp ;
LP = earlang ;
LP = javaScript ;
LP = kotlin ;
LP = ruby ;
LP = smalltalk ;
LP = strongtalk ;
LP = typescript ;
LP = java ;
LP = cpp ;
LP = c ;
LP = simula ;
LP = b ;
LP = algol ;
LP = bcpl ;
LP = cpl ;
LP = fortran ;
LP = lisp ;
LP = plex ;
LP = prolog ;
LP = perl ;
LP = awk ;
LP = snobol ;
LP = eiffel ;
LP = gosu ;
LP = ml ;
LP = python ;
LP = scala ;
LP = swift ;
LP = ada ;
LP = pascal ;
LP = modula ;
LP = ansic ;
LP = basic ;
LP = dylan ;
LP = lua ;
LP = self ;
false.

?- paradigma(dart, Paradigma).
Paradigma = funcional ;
Paradigma = imperativa ;
Paradigma = oo ;
Paradigma = reflexiva.

?- descendente(dart, LP), paradigma(LP, funcional).
LP = cSharp ;
LP = earlang ;
LP = javaScript ;
LP = kotlin ;
LP = ruby ;
LP = typescript ;
LP = cpp ;
LP = cpl ;
LP = lisp ;
LP = perl ;
LP = ml ;
LP = python ;
LP = scala ;
LP = swift ;
LP = dylan ;
LP = lua ;
false.

?- descendente(dart, LP), paradigma(LP, imperativa).
LP = cSharp ;
LP = javaScript ;
LP = kotlin ;
LP = ruby ;
LP = typescript ;
LP = java ;
LP = c ;
LP = simula ;
LP = algol ;
LP = cpl ;
LP = fortran ;
LP = plex ;
LP = perl ;
LP = snobol ;
LP = ml ;
LP = python ;
LP = scala ;
LP = swift ;
LP = ada ;
LP = pascal ;
LP = modula ;
LP = lua ;
false.

?- descendente(dart, LP), paradigma(LP, oo).
LP = cSharp ;
LP = kotlin ;
LP = ruby ;
LP = smalltalk ;
LP = strongtalk ;
LP = typescript ;
LP = java ;
LP = cpp ;
LP = simula ;
LP = fortran ;
LP = perl ;
LP = eiffel ;
LP = python ;
LP = scala ;
LP = swift ;
LP = ada ;
LP = basic ;
LP = dylan ;
LP = lua ;
LP = self ;
false.

?- descendente(dart, LP), paradigma(LP, reflexiva).
LP = cSharp ;
LP = kotlin ;
LP = ruby ;
LP = java ;
LP = lisp ;
LP = perl ;
LP = python ;
false.

?- versao(dart, Versao, Ano).
Versao = 1,
Ano = 2013 ;
Versao = 2,
Ano = 2018.

?- versao(dart, 2, Ano).
Ano = 2018.

?- versao(dart, 1, Ano).
Ano = 2013.

?- versao(dart, Versao, 2018).
Versao = 2.

?- versao(dart, Versao, 2013).
Versao = 1.

?- versaoMaisRecente(dart, Versao).
Versao = 2.

?- versaoMaisRecente(dart, Versao), versao(dart, Versao, Ano).
Versao = 2,
Ano = 2018.

?- hiato(dart, 2, Hiato).
Hiato = 5.

?- hiato(dart, 1, Hiato).
false.

?- hiatoReverso(dart, 1, Hiato).
Hiato = 5.

?- hiatoReverso(dart, 2, Hiato).
false.

